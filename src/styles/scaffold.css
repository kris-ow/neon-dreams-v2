/* /src/styles/scaffold.css */

:root {
  /* design-space: 200×650 scaled ×4 = 800×2600 */
  --design-w: 200px;
  --design-h: 650px;
  --scale: 4;

  /* runtime from JS */
  --computed-scale: 1;
  --parallax-cut: 0px; 

  /* outline colors */  
  --outline-color-primary: rgba(37, 202, 193, 0.75);
  --outline-color-secondary: rgba(195, 142, 129, 0.75);
  --outline-color-accent: #e17613;
  --outline-color-dark: rgba(16, 88, 84, 0.9);
  --ap-outline-color: var(--outline-color-secondary);
  --ap-outline-width: 2px;
  --ap-outline-offset: 0;   /* tweak if you want the line to sit inside/outside */
  --focus-outline-color: var(--outline-color-secondary);
  --debug-outline-color: var(--outline-color-accent);
}

html, body { 
  height: 100%;
  overflow-x: hidden
}

body {
  margin: 0;
  background: #000;
  color: #fff;
}

.page {
  min-height: 100vh;
  display: grid;
  place-items: center;
  height: calc(
    var(--design-h) * var(--scale) * var(--computed-scale)
    - var(--parallax-cut)
  );
}

.stage {
  position: relative;
  width: calc(var(--design-w) * var(--scale));
  height: calc(var(--design-h) * var(--scale));
  transform-origin: top left;
  overflow: hidden;  
}

/* One layer for now */
.layer {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;

  /* Crisp scaling for pixel-art */
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}

/* Layering */
.city { z-index: 10; }
.building { z-index: 20; }
.billboard-frame { z-index: 30; }
.billboard-content { z-index: 40; }
.billboard-btn { z-index: 45;}
.billboard-btn-on { z-index: 46; opacity: 0;}
.apartment { z-index: 50; }
.controls-layer { z-index: 60; }
.zone-overlay {  z-index: 1000; }

.layer { pointer-events: none; }

.hotspot {
  outline: none;
}

.hotspot:focus-visible {
  outline: var(--ap-outline-width) solid var(--focus-outline-color);
  outline-offset: var(--ap-outline-offset);
}

.hotspot.is-selected {
  outline: var(--ap-outline-width) solid var(--ap-outline-color);
  outline-offset: var(--ap-outline-offset);
}

/* Apartments: focus + selected outline (CSS-only) */
.stage .apartment-btn:focus { outline: none; }
.stage .apartment-btn:focus-visible {
  outline: var(--ap-outline-width) solid var(--ap-outline-color);
  outline-offset: var(--ap-outline-offset);
}
.stage .apartment-btn.is-selected,
.stage .apartment-btn[aria-selected="true"],
.stage .apartment-btn[data-selected="true"] {
  outline: var(--ap-outline-width) solid var(--ap-outline-color);
  outline-offset: var(--ap-outline-offset);
}

.zone-box {  border: 1px dashed var(--debug-outline-color); }

.zone-label {
  position: absolute;
  top: 0;
  left: 0;
  padding: 2px 4px;
  font-family: monospace;
  font-size: 10px;
  line-height: 1;
  background: rgba(0, 0, 0, 0.6);
  color: var(--outline-color-primary);
  pointer-events: none;
}

.control-btn { outline: none; }
.control-btn:focus { outline: none; }
.control-btn:focus-visible {
  outline: 2px solid var(--outline-color-secondary);
  outline-offset: 0;
  border-radius: 2px;
}

/* PLAY: reflect audio state from stage[data-audio] */
.stage[data-audio="playing"] .billboard-play-on  { opacity: 1; }
.stage[data-audio="playing"] .billboard-play-off { opacity: 0; }
.stage[data-audio="paused"]  .billboard-play-on  { opacity: 0; }
.stage[data-audio="paused"]  .billboard-play-off { opacity: 1; }

/* PREV/NEXT: show 'on' only while pressed */
.stage[data-prev="pressed"] .billboard-prev-on  { opacity: 1; }
.stage[data-prev="pressed"] .billboard-prev-off { opacity: 0; }

.stage[data-next="pressed"] .billboard-next-on  { opacity: 1; }
.stage[data-next="pressed"] .billboard-next-off { opacity: 0; }

/* Ensure there are no fades—swap must be instant */
.billboard-btn, .billboard-btn-on { transition: none; }

/* Visually hidden, but available to screen readers */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Parallax (background-only) */
.city { will-change: transform; }

/* Debug hook (optional visual switch): 
   you'll toggle [data-parallax="on|off"] from JS in later steps */
.stage[data-parallax="on"]  { outline: 0; }  /* no visible change by default */
.stage[data-parallax="off"] { outline: 0; }


/* ===== Modal ===== */
/* Keep it in the DOM; hide via opacity/visibility so we can animate */
.modal {
  position: fixed;
  inset: 0;
  display: grid;              /* center panel */
  place-items: center;
  z-index: 1000;
}

/* Closed: invisible, non-interactive */
.modal[data-open="false"] {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

/* Open: visible, interactive */
.modal[data-open="true"] {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

/* Backdrop fade */
.modal__backdrop {
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.55);
  will-change: opacity;
  opacity: 0;
  transition: opacity 180ms ease-out;
}
.modal[data-open="true"] .modal__backdrop {
  opacity: 1;
}

/* Panel slide/fade (compositor-only props) */
.modal__panel {
  position: relative; /* positioning context for the close button */
  max-width: min(90vw, 720px);
  max-height: min(85vh, 1200px);
  overflow: auto;
  padding: 20px;
  background: #0c0f14;
  border: 2px solid var(--outline-color-primary);
  border-radius: 8px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.6);
  box-sizing: border-box;

  will-change: transform, opacity;
  transform: translateY(8px) scale(0.98);
  opacity: 0;
  transition: transform 180ms ease-out, opacity 180ms ease-out;
}
.modal[data-open="true"] .modal__panel {
  transform: translateY(0) scale(1);
  opacity: 1;
}

/* Title (leave room for the close button) */
.modal__title {
  margin: 0 0 0.5rem 0;
  padding-right: 48px;       /* space for the × button */
  font-size: 1.25rem;
  line-height: 1.2;
  color: #e6f7ff;
}
.modal__title:focus-visible {
  outline: 2px solid var(--outline-color-dark);
  outline-offset: 2px;
}

/* Close button: top-right of the panel */
.modal__close {
  position: absolute;
  top: 10px;
  right: 12px;
  width: 36px;
  height: 36px;
  border: 0;
  border-radius: 6px;
  background: transparent;
  color: #e6f7ff;
  font-size: 22px;
  line-height: 1;
  cursor: pointer;
  z-index: 1;                /* above content */
  display: inline-grid;
  place-items: center;
}
.modal__close:focus-visible {
  outline: 2px solid var(--outline-color-primary);
  outline-offset: 2px;
}

/* Body content */
.modal__body {
  color: #cfe8ef; 
  font-size: 0.95rem;
}

/* Pixel-art image helpers */
.modal__figure {
  margin: 0.75rem 0 0;
}
.modal__img {
  display: block;
  width: 100%;
  height: auto;
  margin-inline: auto;
  image-rendering: pixelated;
  image-rendering: crisp-edges;
}
.modal__caption {
  text-align: center;
  font-size: 0.85rem;
  opacity: 0.8;
  margin-top: 0.25rem;
}

/* Respect reduced motion: no transitions, no movement */
@media (prefers-reduced-motion: reduce) {
  .modal__backdrop,
  .modal__panel {
    transition: none !important;
  }
  .modal__panel {
    transform: none !important;
    opacity: 1 !important;
  }
}